################################################################################
# Resources and ores

fungible_items:
  {
    key: "foo"
    value: { space: 10 }
  }

fungible_items:
  {
    key: "bar"
    value: { space: 20 }
  }

fungible_items:
  {
    key: "zerospace"
    value: { space: 0 }
  }

fungible_items:
  {
    key: "test ore"
    value:
      {
        space: 15
        refines:
          {
            input_units: 3
            cost: 10
            outputs: { key: "bar" value: 2 }
            outputs: { key: "zerospace" value: 1 }
          }
      }
  }

################################################################################
# Fitments and artefacts

# These ones are dummy "weapons" that can be equipped and constructed
# from dummy blueprints for testing purposes.
fungible_items:
  {
    key: "bow"
    value:
      {
        space: 1
        complexity: 100
        with_blueprint: true
        construction_resources: { key: "foo" value: 2 }
        construction_resources: { key: "bar" value: 1 }
        fitment: { slot: "high" }
      }
  }
fungible_items:
  {
    key: "sword"
    value:
      {
        space: 1
        complexity: 1
        with_blueprint: true
        construction_resources: { key: "zerospace" value: 10 }
        fitment: { slot: "high" }
      }
  }

# Fitments of mid / low slots for testing slot restrictions.
fungible_items:
  {
    key: "mid fitment"
    value:
      {
        space: 1
        complexity: 1
        fitment: { slot: "mid" }
      }
  }
fungible_items:
  {
    key: "low fitment"
    value:
      {
        space: 1
        complexity: 1
        fitment: { slot: "low" }
      }
  }

# A size-restricted fitment.
fungible_items:
  {
    key: "only medium"
    value:
      {
        space: 1
        complexity: 1
        fitment: { slot: "high" vehicle_size: MEDIUM }
      }
  }

# Strong complexity multiplier for testing its effect.
fungible_items:
  {
    key: "super multiplier"
    value:
      {
        space: 1
        complexity: 1
        fitment:
          {
            slot: "low"
            complexity: { percent: 200 }
          }
      }
  }

# Strong reduction of prospecting time (more than any real item)
# so that we can test the lower cap at one block.
fungible_items:
  {
    key: "super scanner",
    value:
      {
        space: 1
        complexity: 1
        with_blueprint: true
        fitment:
          {
            slot: "high"
            prospecting_blocks: { percent: -99 }
          }
      }
  }

# Armour increase (but without size or other restrictions like the normal
# plating fitments).
fungible_items:
  {
    key: "free plating"
    value:
      {
        space: 1
        complexity: 1
        fitment:
          {
            slot: "low"
            max_armour: { percent: 10 }
          }
      }
  }

fungible_items:
  {
    key: "test artefact"
    value:
      {
        space: 0
        reveng:
          {
            cost: 10
            possible_outputs: "bow bpo"
            possible_outputs: "sword bpo"
          }
      }
  }

################################################################################
# Vehicles

# A test vehicle with some well-defined stats suitable for testing
# basic combat in the integration tests.
fungible_items:
  {
    key: "light attacker"
    value:
      {
        space: 50
        complexity: 100
        vehicle:
          {
            cargo_space: 20
            speed: 3000
            regen_data:
              {
                max_hp: { armour: 100 shield: 30 }
                regeneration_mhp: { shield: 500 }
              }
            combat_data:
              {
                attacks:
                  {
                    range: 10
                    damage: { min: 1 max: 10 }
                  }
                target_size: 1000
              }
            mining_rate: { min: 1 max: 1 }
            prospecting_blocks: 10
            size: LIGHT
            equipment_slots: { key: "mid" value: 10 }
          }
      }
  }

# A test vehicle with some well-defined stats that can be used
# also e.g. in tests for fitments.
fungible_items:
  {
    key: "chariot"
    value:
      {
        space: 50
        complexity: 100
        with_blueprint: true
        vehicle:
          {
            cargo_space: 1000
            speed: 1000
            regen_data:
              {
                max_hp: { armour: 1000 shield: 100 }
                regeneration_mhp: { shield: 10 }
              }
            combat_data:
              {
                attacks:
                  {
                    range: 100
                    damage: { min: 10 max: 100 }
                  }
                attacks:
                  {
                    area: 10
                    damage: { min: 1 max: 10 }
                  }
                target_size: 1000
              }
            mining_rate: { min: 10 max: 100 }
            prospecting_blocks: 10
            size: MEDIUM
            equipment_slots: { key: "high" value: 3 }
            equipment_slots: { key: "mid" value: 2 }
            equipment_slots: { key: "low" value: 1 }
          }
      }
  }

# Test vehicle without intrinsic attacks, so that we can equip it with
# attack fitments and test them in isolation.
fungible_items:
  {
    key: "basetank"
    value:
      {
        space: 50
        complexity: 10000
        with_blueprint: true
        vehicle:
          {
            cargo_space: 1000
            speed: 1000
            regen_data:
              {
                max_hp: { armour: 1000 shield: 100 }
                regeneration_mhp: { shield: 1000 }
              }
            combat_data: { target_size: 1000 }
            size: HEAVY
            equipment_slots: { key: "high" value: 10 }
            equipment_slots: { key: "mid" value: 10 }
            equipment_slots: { key: "low" value: 10 }
          }
      }
  }
